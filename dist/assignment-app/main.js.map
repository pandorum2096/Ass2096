{"version":3,"sources":["./src/app/assignments/assignment.model.ts","./src/environments/environment.ts","./src/app/assignments/assignment-detail/assignment-detail.component.html","./src/app/assignments/assignment-detail/assignment-detail.component.ts","./src/app/shared/auth.guard.ts","./src/app/shared/auth.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/rendu.directive.ts","./src/app/assignments/add-assignment/add-assignment.component.ts","./src/app/assignments/add-assignment/add-assignment.component.html","./src/app/assignments/assignments.component.html","./src/app/assignments/assignments.component.ts","./src/app/shared/logging.service.ts","./src/app/shared/assignments.service.ts","./src/app/assignments/edit-assigment/edit-assigment.component.html","./src/app/assignments/edit-assigment/edit-assigment.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\n/*****************************************************************************************/\nexport class Assignment {\n  _id?: string;\n  id: number;\n  nom: string;\n  dateDeRendu: Date;\n  rendu?: boolean;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<!------------------------------------------------------------------------------------------>\n<div class=\"container\">\n<!------------------------------------------------------------------------------------------>\n  <mat-card *ngIf=\"assignmentTransmis\">\n    <!------------------------------------------------------------------------------------------>\n    <mat-card-title>{{assignmentTransmis.nom}}</mat-card-title>\n    <!------------------------------------------------------------------------------------------>\n    <mat-card-subtitle>{{assignmentTransmis.dateDeRendu | date}}</mat-card-subtitle>\n    <!------------------------------------------------------------------------------------------>\n    <div id=\"bottom\">\n      <!------------------------------------------------------------------------------------------>\n      <mat-checkbox *ngIf=\"!assignmentTransmis.rendu\" (click)=\"onAssignmentRendu()\">\n        Devoir rendu\n      </mat-checkbox>\n      <!------------------------------------------------------------------------------------------>\n      <button mat-flat-button color=\"primary\" [disabled]=\"!loggedIn()\" (click)=\"onClickEdit()\">\n        EDIT\n      </button>\n      <!------------------------------------------------------------------------------------------>\n      <button mat-flat-button color=\"warn\" [disabled]=\"!loggedIn()\"  (click)=\"onDelete()\">\n        DELETE\n      </button>\n      <!------------------------------------------------------------------------------------------>\n    </div>\n    <!------------------------------------------------------------------------------------------>\n  </mat-card>\n<!------------------------------------------------------------------------------------------>\n</div>\n<!------------------------------------------------------------------------------------------>","/*****************************************************************************************/\nimport { Component, Input, OnInit } from '@angular/core';\nimport { AssignmentsService } from 'src/app/shared/assignments.service';\nimport { Assignment } from '../assignment.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from 'src/app/shared/auth.service';\n/*****************************************************************************************/\n@Component({\n  selector: 'app-assignment-detail',\n  templateUrl: './assignment-detail.component.html',\n  styleUrls: ['./assignment-detail.component.css'],\n})\nexport class AssignmentDetailComponent implements OnInit {\n  /*****************************************************************************************/\n  assignmentTransmis: Assignment;\n/*****************************************************************************************/\n  constructor(\n    private assignmentsService: AssignmentsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n/*****************************************************************************************/\n  ngOnInit(): void {\n    this.getAssignment();\n  }\n/*****************************************************************************************/\n  getAssignment() {\n    // 1 récupérer l'id de l'assignment dans l'URL\n    let id: number = +this.route.snapshot.params.id;\n    console.log('COMPOSANT DETAIL ID = ' + id);\n\n    this.assignmentsService.getAssignment(id).subscribe((assignment) => {\n      //console.log(assignment);\n      this.assignmentTransmis = assignment;\n    });\n  }\n/*****************************************************************************************/\n  onAssignmentRendu() {\n    this.assignmentTransmis.rendu = true;\n\n    this.assignmentsService\n      .updateAssignment(this.assignmentTransmis)\n      .subscribe((message) => {\n        console.log(message);\n\n        // on retourne à la page d'accueil\n        this.router.navigate(['/home']);\n      });\n  }\n/*****************************************************************************************/\n  onDelete() {\n    this.assignmentsService\n      .deleteAssignment(this.assignmentTransmis)\n      .subscribe((reponse) => {\n        console.log(reponse.message);\n        this.assignmentTransmis = null;\n\n        // on retourne à la page d'accueil\n        this.router.navigate(['/home']);\n      });\n  }\n/*****************************************************************************************/\n  onClickEdit() {\n    this.router.navigate(['/assignment', this.assignmentTransmis.id, 'edit'], {\n      queryParams: { nom: 'toto', age: '30' },\n      fragment: 'edition',\n    });\n  }\n/*****************************************************************************************/\n  loggedIn() {\n    return this.authService.loggedIn;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  // appelée lors de la navigation\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    //return true; // signifie \"toujours activé/autorisé\"\n\n    return this.authService.isAdmin().then((authentifie: Boolean) => {\n      // ici on traite la valeur retournée par la promesse\n      if (authentifie) {\n        console.log('AUTORISE A NAVIGUER');\n        return true; // on autorise la navigation\n      } else {\n        console.log('NON AUTORISE A NAVIGUER');\n        this.router.navigate(['/home']);\n        return false;\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  loggedIn = false;\n\n  constructor() {}\n\n  logIn() {\n    this.loggedIn = true;\n  }\n\n  logOut() {\n    this.loggedIn = false;\n  }\n\n  // cette méthode renvoie une promesse (on devra traiter le résultat avec un then...)\n  // la valeur renvoyé (qu'on récupèrera dans le then(val => {....}) est la valeur\n  // de la propriété loggedIn. En gros, si on est loggué, on est admin...\n  isAdmin(): Promise<any> {\n    const isUserAdmin = new Promise((resolve, reject) => {\n      resolve(this.loggedIn);\n    });\n\n    return isUserAdmin;\n  }\n}\n","/*****************************************************************************************/\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './shared/auth.service';\n/*****************************************************************************************/\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\n  /*****************************************************************************************/\nexport class AppComponent {\n  /*****************************************************************************************/\n  titre = 'Application de gestion des Assignments';\n/*****************************************************************************************/\n  constructor(private authService: AuthService, private router: Router) {}\n/*****************************************************************************************/\n  login() {\n    if (!this.authService.loggedIn) {\n      this.authService.logIn();\n    } else {\n      this.authService.logOut();\n      this.router.navigate(['/home']);\n    }\n  }\n/*****************************************************************************************/\n\n}\n/*****************************************************************************************/","\n<!------------------------------------------------------------------------------------------>\n<h1>\n  <nav>\n    <a routerLink=\"/home\">{{titre}}</a>\n  </nav>\n</h1>\n<!------------------------------------------------------------------------------------------>\n<mat-slide-toggle color=\"primary\" (click)=\"login()\">Log In</mat-slide-toggle>\n<!------------------------------------------------------------------------------------------>\n<!--\n<app-assignments></app-assignments>\n-->\n<!------------------------------------------------------------------------------------------>\n<router-outlet></router-outlet>\n<!------------------------------------------------------------------------------------------>","/*************************************DEFAUT****************************************************/\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n/*****************************************************************************************/\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n/*****************************************************************************************/\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n/*****************************************************************************************/\nimport { AssignmentsComponent } from './assignments/assignments.component';\nimport { AssignmentDetailComponent } from './assignments/assignment-detail/assignment-detail.component';\nimport { AddAssignmentComponent } from './assignments/add-assignment/add-assignment.component';\nimport { EditAssigmentComponent } from './assignments/edit-assigment/edit-assigment.component';\n/*****************************************************************************************/\nimport { RenduDirective } from './shared/rendu.directive';\nimport { AuthGuard } from './shared/auth.guard';\n/*****************************************************************************************/\nconst routes: Routes = [\n  { path: '', component: AssignmentsComponent },\n  { path: 'home', component: AssignmentsComponent },\n  { path: 'add', component: AddAssignmentComponent },\n  { path: 'assignment/:id', component: AssignmentDetailComponent },\n  { path: 'assignment/:id/edit', component: EditAssigmentComponent,\n    canActivate: [AuthGuard],\n  },\n];\n/*****************************************************************************************/\n@NgModule({\n  declarations: [\n    AppComponent,\n    AssignmentsComponent,\n    RenduDirective,\n    AssignmentDetailComponent,\n    AddAssignmentComponent,\n    EditAssigmentComponent,\n  ],\n  /*****************************************************************************************/\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDividerModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatListModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    FormsModule,\n    RouterModule.forRoot(routes),\n    HttpClientModule,\n  ],\n  /*****************************************************************************************/\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appRendu]',\n})\nexport class RenduDirective {\n  constructor(el: ElementRef) {\n    el.nativeElement.style.color = 'green';\n    el.nativeElement.style.border = '1px solid green';\n    // el.nativeElement.append += '### RENDU ###';\n  }\n}\n","/*****************************************************************************************/\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AssignmentsService } from 'src/app/shared/assignments.service';\nimport { Assignment } from '../assignment.model';\n/*****************************************************************************************/\n@Component({\n  selector: 'app-add-assignment',\n  templateUrl: './add-assignment.component.html',\n  styleUrls: ['./add-assignment.component.css'],\n})\nexport class AddAssignmentComponent implements OnInit {\n  /*****************************************************************************************/\n  // pour le formulaire\n  nomDevoir = '';\n  dateDeRendu: Date = null;\n/*****************************************************************************************/\n  constructor(\n    private assignmentsService: AssignmentsService,\n    private router: Router\n  ) {}\n/*****************************************************************************************/\n  ngOnInit(): void {}\n/*****************************************************************************************/\n  onSubmit(event) {\n    // evite la soumission standard du formulaire, qui génère un warning\n    // dans la console...\n    event.preventDefault();\n/*****************************************************************************************/\n    console.log(\n      'Dans submit nom = ' + this.nomDevoir + ' date = ' + this.dateDeRendu\n    );\n/*****************************************************************************************/\n    let newAssignment = new Assignment();\n    newAssignment.id = Math.floor(Math.random() * 1000000);\n    newAssignment.nom = this.nomDevoir;\n    newAssignment.dateDeRendu = this.dateDeRendu;\n    newAssignment.rendu = false;\n/*****************************************************************************************/\n    // on va utiliser directement le service\n    this.assignmentsService\n      .addAssignment(newAssignment)\n      .subscribe((reponse) => {\n        console.log(reponse.message);\n\n        // il va falloir naviguer de nouveau vers la page d'accueil\n        // on va devoir faire l'équivalent du routerLink=\"/home\" mais\n        // par programme...\n        // on retourne à la page d'accueil\n        this.router.navigate(['/home']);\n      });\n/*****************************************************************************************/\n  }\n}\n","<!------------------------------------------------------------------------------------------>\n<form ngForm class=\"form\" #assignmentForm>\n  <!------------------------------------------------------------------------------------------>\n  <mat-form-field>\n    <input matInput placeholder=\"Entrez un nom\" [(ngModel)]=\"nomDevoir\" name=\"nom\">\n  </mat-form-field>\n<!------------------------------------------------------------------------------------------>\n  <mat-form-field>\n    <input matInput [matDatepicker]=\"datepicker\" [(ngModel)]=\"dateDeRendu\" name=\"date\">\n<!------------------------------------------------------------------------------------------>\n    <mat-datepicker-toggle matSuffix [for]=\"datepicker\"></mat-datepicker-toggle>\n    <mat-datepicker #datepicker></mat-datepicker>\n<!------------------------------------------------------------------------------------------>\n  </mat-form-field>\n<!------------------------------------------------------------------------------------------>\n  <button mat-stroked-button color=\"primary\" (click)=\"onSubmit($event); assignmentForm.reset();\">\n    Ajouter un devoir\n  </button>\n  <!------------------------------------------------------------------------------------------>\n</form>\n<!------------------------------------------------------------------------------------------>","\n<!------------------------------------------------------------------------------------------>\n<main class=\"container\">\n<!------------------------------------------------------------------------------------------>\n  <nav>\n    <a routerLink=\"/add\">\n      <button mat-flat-button color=\"accent\" class=\"ajouterBtn\">\n        Ajouter Assignment\n      </button>\n    </a>\n  </nav>\n  <!------------------------------------------------------------------------------------------>\n  <mat-list *ngFor=\"let a of assignments\">\n    <!------------------------------------------------------------------------------------------>\n    <h3 mat-subheader>Date de rendu : {{a.dateDeRendu | date}}</h3>\n    <!------------------------------------------------------------------------------------------>\n    <nav>\n      <!------------------------------------------------------------------------------------------>\n      <a routerLink=\"/assignment/{{a.id}}\">\n<!------------------------------------------------------------------------------------------>\n        <mat-list-item (click)=\"assignmentClique(a);\">\n          <p appRendu *ngIf=\"a.rendu; else nonsoumis\">\n            Devoir intitulé {{a.nom}} rendu.\n          </p>\n\n          <ng-template #nonsoumis>\n            <p [ngClass]=\"{nonrendu:true}\">le devoir {{a.nom}} n'a pas été rendu...</p>\n          </ng-template>\n          <mat-divider></mat-divider>\n        </mat-list-item>\n<!------------------------------------------------------------------------------------------>\n      </a>\n      <!------------------------------------------------------------------------------------------>\n    </nav>\n    <!------------------------------------------------------------------------------------------>\n  </mat-list>\n\n\n</main>\n<!------------------------------------------------------------------------------------------>","/*****************************************************************************************/\nimport { Component, OnInit } from '@angular/core';\nimport { AssignmentsService } from '../shared/assignments.service';\nimport { Assignment } from './assignment.model';\n/*****************************************************************************************/\n@Component({\n  selector: 'app-assignments',\n  templateUrl: './assignments.component.html',\n  styleUrls: ['./assignments.component.css'],\n})\nexport class AssignmentsComponent implements OnInit {\n  /*****************************************************************************************/\n  assignmentSelectionne: Assignment;\n  // tableau des assignments\n  assignments: Assignment[];\n  /*****************************************************************************************/\n  constructor(private assignmentService: AssignmentsService) {}\n/*****************************************************************************************/\n  ngOnInit(): void {\n    console.log('Demande des assignments via le service...');\n    // on utilise le service pour récupérer la liste des assignments\n    this.assignmentService.getAssignments().subscribe((assignements) => {\n      // on ne rentre ici que quand les données sont prêtes\n      // par ex, le service peut utiliser une BD distance et des WebService\n      // pour récupérer les données..\n      this.assignments = assignements;\n      console.log('Données reçues...');\n    });\n    console.log('getAssignments appelé....');\n  }\n/*****************************************************************************************/\n  assignmentClique(a: Assignment) {\n    console.log('Assignment cliqué : ' + a.nom);\n    this.assignmentSelectionne = a;\n  }\n/*****************************************************************************************/\n  onNouvelAssignment(newAssignment: Assignment) {\n    //this.assignments.push(newAssignment);\n    this.assignmentService.addAssignment(newAssignment).subscribe((message) => {\n      // on ne rentre ici que quand l'ajout (insert) a bien été\n      // effectué !\n      console.log(message);\n    });\n\n    // et on cache le formulaire et on réaffiche la liste à jour\n    //this.formVisible = false;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoggingService {\n  constructor() {}\n\n  log(assignmentName: string, action: string) {\n    console.log(assignmentName + ' ' + action);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Assignment } from '../assignments/assignment.model';\nimport { Observable, of } from 'rxjs';\nimport { LoggingService } from './logging.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AssignmentsService {\n  assignments: Assignment[] = [\n    {\n      id: 1,\n      nom: 'TP Angular 1 à rendre !',\n      dateDeRendu: new Date('01/02/2021'),\n      rendu: true,\n    },\n    {\n      id: 2,\n      nom: 'Projet MOPOLO SQL',\n      dateDeRendu: new Date('02/15/2021'),\n      rendu: false,\n    },\n    {\n      id: 3,\n      nom: 'Lange R à finir',\n      dateDeRendu: new Date('01/20/2021'),\n      rendu: false,\n    },\n  ];\n\n  constructor(\n    private loggingService: LoggingService,\n    private http: HttpClient\n  ) {}\n\n  url = 'https://api2096.herokuapp.com/api/assignments';\n\n  getAssignments(): Observable<Assignment[]> {\n    console.log('Dans getAssignments dans le service...');\n    this.loggingService.log('tous les assignments', 'ont été recherchés');\n\n    // return of(this.assignments);\n\n    return this.http.get<Assignment[]>(this.url);\n  }\n\n  getAssignment(id: number): Observable<Assignment> {\n    console.log('Dans getAssignment dans le service id=' + id);\n    this.loggingService.log('Assignment id=' + id, 'a été recherché');\n\n    /*\n    let assignmentTrouve: Assignment;\n\n    this.assignments.forEach((a, index) => {\n      if (a.id === id) {\n        console.log(\"Assignment trouvé à l'index \" + index);\n        assignmentTrouve = a;\n      }\n    });\n    return of(assignmentTrouve);\n*/\n    //return of(this.assignments.find((a) => a.id === id));\n    return this.http.get<Assignment>(this.url + '/' + id);\n  }\n\n  addAssignment(assignment: Assignment): Observable<any> {\n    // this.assignments.push(assignment);\n    this.loggingService.log(assignment.nom, 'a été ajouté');\n\n    return this.http.post(this.url, assignment);\n  }\n\n  updateAssignment(assignment: Assignment): Observable<any> {\n    /*\n    this.assignments.forEach((a, index) => {\n      if (a === assignment) {\n        this.assignments[index] = a;\n      }\n    });\n    */\n    this.loggingService.log(assignment.nom, 'a été mis à jour');\n\n    return this.http.put(this.url, assignment);\n  }\n\n  deleteAssignment(assignment: Assignment): Observable<any> {\n    /*\n    this.assignments.forEach((a, index) => {\n      if (a === assignment) {\n        // suppression d'un élément du tableau\n        // splice(position, nb elements à supprimer)\n        this.assignments.splice(index, 1);\n      }\n    });\n    */\n    this.loggingService.log(assignment.nom, 'a été supprimé');\n\n    return this.http.delete(this.url + '/' + assignment._id);\n  }\n}\n","\n<!------------------------------------------------------------------------------------------>\n<div class=\"container\" *ngIf=\"assignment\">\n<!------------------------------------------------------------------------------------------>\n  <h1>Edition de l'assignment {{assignment.nom}}</h1>\n<!------------------------------------------------------------------------------------------>\n  <form ngForm class=\"form\">\n<!------------------------------------------------------------------------------------------>\n    <mat-form-field>\n      <input matInput placeholder=\"Edition du nom\" [(ngModel)]=\"nomassignment\" name=\"assignment-name\">\n    </mat-form-field>\n<!------------------------------------------------------------------------------------------>\n    <mat-form-field>\n      <input matInput [matDatepicker]=\"picker\" placeholder=\"Edition de la date\" [(ngModel)]=\"dateDeRendu\" name=\"date\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n<!------------------------------------------------------------------------------------------>\n    <button mat-raised-button color=\"primary\" (click)=\"onSaveAssignment()\"> Sauver</button>\n<!------------------------------------------------------------------------------------------>\n  </form>\n  <!------------------------------------------------------------------------------------------>\n</div>\n<!------------------------------------------------------------------------------------------>","/*****************************************************************************************/\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AssignmentsService } from 'src/app/shared/assignments.service';\nimport { Assignment } from '../assignment.model';\n/*****************************************************************************************/\n@Component({\n  selector: 'app-edit-assigment',\n  templateUrl: './edit-assigment.component.html',\n  styleUrls: ['./edit-assigment.component.css'],\n})\nexport class EditAssigmentComponent implements OnInit {\n  /*****************************************************************************************/\n  assignment: Assignment;\n  // formulaire\n  nomassignment: string;\n  dateDeRendu: Date;\n/*****************************************************************************************/\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private assignmentsService: AssignmentsService\n  ) {}\n/*****************************************************************************************/\n  ngOnInit(): void {\n    console.log(this.route.snapshot.queryParams);\n    console.log(this.route.snapshot.fragment);\n\n    this.getAssignment();\n  }\n/*****************************************************************************************/\n  getAssignment() {\n    // 1 récupérer l'id de l'assignment dans l'URL\n    let id: number = +this.route.snapshot.params.id;\n    /*****************************************************************************************/\n    console.log('COMPOSANT EDIT ID = ' + id);\n      /*****************************************************************************************/\n    this.assignmentsService.getAssignment(id).subscribe((assignment) => {\n      //console.log(assignment);\n      this.assignment = assignment;\n      /*****************************************************************************************/\n      if (assignment) {\n        this.nomassignment = assignment.nom;\n        this.dateDeRendu = assignment.dateDeRendu;\n      }\n      /*****************************************************************************************/\n    });\n  }\n/*****************************************************************************************/\n  onSaveAssignment() {\n    if (this.nomassignment) {\n      this.assignment.nom = this.nomassignment;\n    }\n    /*****************************************************************************************/\n    if (this.dateDeRendu) {\n      this.assignment.dateDeRendu = this.dateDeRendu;\n    }\n    /*****************************************************************************************/\n    this.assignmentsService\n      .updateAssignment(this.assignment)\n      .subscribe((reponse) => {\n        console.log(reponse.message);\n        // on navigue vers la page d'accueil\n        this.router.navigate(['/home']);\n      });\n  }\n/*****************************************************************************************/\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}